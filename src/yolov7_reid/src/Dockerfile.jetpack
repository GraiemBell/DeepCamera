ARG UBUNTU_BASE_IMG=ubuntu:18.04
FROM $UBUNTU_BASE_IMG

ENV DEBIAN_FRONTEND "noninteractive"
ENV TZ "America/Los_Angeles"
# Install some basic utilities
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    sudo \
    git \
    bzip2 \
    libx11-6 \
    libglib2.0-0 \
    tzdata \
    bash \
    fluxbox \
    git \
    net-tools \
    novnc \
    supervisor \
    x11vnc \
    xterm \
    xvfb \
    wget \
    python3-pip \
    ffmpeg \
    libsm6 \
    libxext6 \
    qt5dxcb-plugin


RUN apt-get install -y ffmpeg libsm6 libxext6
ARG TARGETPLATFORM
ARG SKIP_MINICONDA

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    LC_ALL=C.UTF-8 \
    DISPLAY=:0.0 \
    DISPLAY_WIDTH=1024 \
    DISPLAY_HEIGHT=768 \
    RUN_XTERM=yes \
    RUN_FLUXBOX=yes
ARG JETPACK_VERSION
RUN pip3 install --upgrade pip
RUN pip3 install python-telegram-bot==13.12 \
                notebook==6.4.10 \
                pymilvus==2.0.0 \
                youtube-dl==2020.12.2 \
                Flask==2.0.3 \
                redis==4.3.4 \
                pafy==0.5.5

RUN if [ "$JETPACK_VERSION" = "4" ] ; then \
        wget https://nvidia.box.com/shared/static/pmsqsiaw4pg9qrbeckcbymho6c01jj4z.whl -O onnxruntime_gpu-1.11.0-cp36-cp36m-linux_aarch64.whl ; \
        pip3 install onnxruntime_gpu-1.11.0-cp36-cp36m-linux_aarch64.whl ; \
        rm onnxruntime_gpu-1.11.0-cp36-cp36m-linux_aarch64.whl ; \ 
        pip3 install python-telegram-bot==13.11 --upgrade ; \
    fi ; \
    if [ "$JETPACK_VERSION" = "5.0" ] ; then \
        wget https://nvidia.box.com/shared/static/v59xkrnvederwewo2f1jtv6yurl92xso.whl -O onnxruntime_gpu-1.12.1-cp38-cp38-manylinux2014_aarch64.whl ; \
        pip3 install onnxruntime_gpu-1.12.1-cp38-cp38-manylinux2014_aarch64.whl ; \
        rm onnxruntime_gpu-1.12.1-cp38-cp38-manylinux2014_aarch64.whl ; \
        pip3 install python-telegram-bot==13.14 --upgrade ; \
    fi
ENV JETPACK_VERSION $JETPACK_VERSION
ADD ./docker-novnc /app/docker-novnc
ADD ./models /app/models
ADD https://github.com/SharpAI/DeepCamera/releases/download/v3.4.3/mgn_R50-ibn.onnx /app/models/mgn_R50-ibn.onnx
ADD ./YOLOv7 /app/YOLOv7
ADD ./requirements.txt /app/requirements.txt
RUN pip3 install -r /app/requirements.txt
ADD ./*.py /app/

WORKDIR /app

CMD ["/app/docker-novnc/entrypoint.sh"]
EXPOSE 8080